{
  "extends": [
    "plugin:instawork/recommended"
  ],
  "plugins": [
    "instawork"
  ],
  "rules": {
    "import/no-extraneous-dependencies": [
      "warn",
      {
        "devDependencies": [
          "**/*.stories.js",
          "**/stories/*.js",
          "**/*.test.js",
          "**/stories.js",
          "**/scripts/*",
          "**/scripts/*/*",
          "**/scripts/*/*/*",
          "**/storybook/*",
          "**/test",
          "**/test/*",
          "**/test/**/*"
        ]
      }
    ],
    "import/no-internal-modules": [
      "warn",
      {
        "allow": [
          "hyperview/**",
          "react-native/Libraries/StyleSheet/StyleSheet",
          "react-native/Libraries/StyleSheet/StyleSheetTypes",
          "react-native/Libraries/StyleSheet/normalizeColor"
        ]
      }
    ],
    "instawork/error-object": "off",
    "instawork/deprecate-components": "error",
    "instawork/deprecate-stateless": "error",
    "instawork/import-modules": "error",
    "instawork/import-services": "error",
    "instawork/pure-components": "error",
    "instawork/stories-components": "error",
    "instawork/stories-navbars": "error",
    "instawork/stories-screens": "error",
    "react/destructuring-assignment": "error",
    "react/jsx-sort-props": "error",
    "sort-keys": "error"
  },
  "overrides": [
    {
      "files": [
        "**/types.js"
      ],
      "rules": {
        "no-use-before-define": "off",
        "max-len": "off"
      }
    },
    {
      "files": [
        "**/*.ts",
        "**/*.tsx"
      ],
      "parser": "@typescript-eslint/parser",
      "plugins": [
        "@typescript-eslint"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "airbnb",
        "airbnb/hooks",
      ],
      "rules": {
        "instawork/flow-annotate": "off",
        "@typescript-eslint/no-unused-vars": "error",
        // to enforce using type for object type definitions, can be type or interface 
        "@typescript-eslint/consistent-type-definitions": [
          "error",
          "type"
        ]
      }
    }
  ]
}